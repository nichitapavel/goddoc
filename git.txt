Git - version control your code!

Steps to add a locally created repository to a remote one (github) [1]:
  git init
  git add .
  git commit -m "First commit"
  git remote add origin git@github.com:<user>/<repo name>.git
  git remote -v
  git pull origin master
  git push origin master

Fix error *fatal: refusing to merge unrelated histories* [2]:
  git pull origin master --allow-unrelated-histories
Set a remote branch for the current branch:
  git branch --set-upstream=origin <branch name>
  i.e.: git branch --set-upstream=origin master
  git push --set-upstream=origin <branch name>
  i.e.: git push --set-upstream origin master
Clean repository forcefully off all files and directories that are not tracked, ignored files too:
  git clean -xdf
Clean changes to all tracked files:
  git checkout *
Change a branch name (2nd example for current branch):
  git branch -m <oldname> <newname>
  git branch -m <newname>
List all locally available branches: 
  git branch -l
List all locally and remotely available branches: 
  git branch -a
Delete  a branch that was fully merged into another:
  git branch -d <branch name>
  git branch --delete <branch name>
Delete  a branch no matter what is it's status:
  git branch -D <branch name>
Delete a remote branch:
  git push origin :<branch name>
  git push origin --delete <branch name>
How to unignore a folder/file if is ignored in .gitignore (edit the .gitignore file):
  !somefolder/somefile
Multiline commit:
  git commit -m "-first line" -m "-second line" -m "-third line"
Change the latest commit message (BE CARREFULL WITH HISTORY CHANGES, THINK ABOUT YOUR TEAMMATES!) [3]:
  git commit --amend -m "<message>"
  i.e.: git commit --amend -m "-DVFS"
See diff of staged code (added but not committed):
  git diff --staged
Add to stage only tracked file:
  git add -u
Search through the git log [4]:
  git log --all --grep='Some text'
Show difference of the same file from two branches [5]:
  git diff <branch 1> <branch 2> -- <file>
  i.e.: git diff master feature-01 -- main.py


git config
==========
Git config credentials:
  git config --global user.name "Pavel Nichita"
  git config --global user.email you@example.com
Git push/pull settings only affects current branch:
  git config --global push.default simple
Git global repo end of line character:
  # these two can get in conflict [6]
  git config --global core.eol lf
  git config --global core.autocrlf input


REFERENCES:
[1] - https://help.github.com/en/articles/adding-an-existing-project-to-github-using-the-command-line
[2] - https://stackoverflow.com/questions/37937984/git-refusing-to-merge-unrelated-histories-on-rebase
[3] - https://linuxize.com/post/change-git-commit-message/
[4] - https://stackoverflow.com/questions/7124914/how-to-search-a-git-repository-by-commit-message#answer-7124949
[5] - https://stackoverflow.com/questions/4099742/how-to-compare-files-from-two-different-branches#answer-4099805
[6] - https://git-scm.com/docs/git-config#Documentation/git-config.txt-coreeol

