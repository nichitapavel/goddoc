Shell/Bash or other terminal commands that currently do not deserver a separate file!

Compress something using multiple cores [1]:
  **Format tar.xz**
  compress with 4 cores                 : tar -cf - <something> | xz --threads=4 > <name>.tar.xz
  compress with all cores               : tar -cf - <something/> | xz --threads=0 > <name>.tar.xz
  compress multiple directories or files: tar -cf - <dir1/> <dir2/file1> <file2> | xz --threads=0 > <name>.tar.xz
  i.e.: tar -cf - snap/ Downloads/image.jpg examples.desktop | xz --threads=0 > just_for_fun.tar.xz
  **Format tar.gz [8]:**
  compress with all cores by defualt    : tar cf - <something> | pigz > <name>.tar.gz
  compress wiht 4 cores                 : tar cf - <something> | pigz -p 4 > <name>.tar.gz
Parallize bash, inkscape export [7]:
  # man pages have for loops examples
  # inkscape command valid for v0.92
  parallel inkscape -z -f {} -d 400 -e {.}.png ::: *.svg
Parallize bash, same program with multiple arguments:
  parallel ./erasthones {} ::: {1000, 2000, 3000, 4000}
Find ip/dns name from an dns name/ip:
  nslookup <ip/dns name> [<dns server>]
  host <ip/dns name>
  i.e.: nslookup google.com
        nslookup 192.168.0.195 192.168.0.1
        host 192.168.0.48
        host google.com 192.168.0.1
Update list files database (needed by `locate`):
  sudo updatedb
Find a file (text or binary) in the system:
  locate <file name>  -> (see `updatedb`)
  find <path> -type f -name <file name>
  i.e.: locate swapfile
        find /home/pavel -type f -name example*
        sudo find / -type f -name microvolts
Output/read from the line <x> till end of file:
  tail -n +<line number> <file>
  i.e.: tail -n +5 /etc/ucf.conf
List files of a installed package:
  dpkg -L <package>
  i.e.: dpkg -L poppler-utils
List package from which the file is part of:
  dpkg -S <file>
  i.e.: dpkg -S /usr/bin/cpufreq-set
Files with files lists (mind the redundency):
  In _/var/lib/dpkg/info/_ you can find _.list_ files with
  information that lists files of a installed package,
  exactly like `dpkg -L <package>`
Merge pdf's together:
  pdfunite <list of pdf space separated> <output pdf>
  i.e.: pdfunite code-1.pdf code-2.pdf code-4.pdf code-all.pdf
        pdfunite code-*.pdf code-all.pdf
Safely create a temporary file:
  tempfile
  mktemp
Safely create a temporary directory:
  mktemp -d
List of files/directories recursively and planar in current location (for hidden files: -a):
  tree -fia --noreport
List of files/directories but exclude these ones [21]:
  tree -I "config|sources.list.d"
Compress into .zip a directory:
  zip -r <archive>.zip <directory>
  i.e.: zip -r a8.zip 20190403_rar/
Update an existing .zip with new file:
  zip <archive.zip> <files>
  i.e.: zip a8.zip README.txt
Pretty print a dot separated file in a table-column type style:
  column -t -s '.' file.txt
Copy symbolic links instead of files pointed by symbolic links:
  cp -P <symbolic link> <new location>
Find available manual pages for a package:
  whatis <package>
  i.e.: whatis man
Find available manual pages for a package (extended vs previous cmd):
  apropos <package>
  i.e.: apropos man
Open a specific manual page:
  man <manual page> <package>
  i.e.: man 7 man
Add user to another group [13]:
  usermod -aG <group> <user>
  i.e.: usermod -aG sudo pavel  # adds user pavel to sudo(ers) group
Change your default shell [2]:
  1. check your desired shell is available in /etc/shells
  2. Two available commands:
     1. chsh -s /usr/bin/fish
     2. usermod -s /usr/bin/fish $USER
Close a frozen ssh connection [3]:
  hit "Enter" and type "~."
Generate a ssh key MD5 fingerprint (ala github) [4]:
  ssh-keygen -l -E md5 -f ~/.ssh/id_rsa.pub
Fancy system info (install with apt):
  neofetch
List screen session:
  screen -list
Create a screen session with custom id:
  screen -S training
Share terminal sessions with screen (same user):
  1º user creates screen session         : screen
  2º user connect to the screen session  : screen -x <session id>
  Use previous commands (-list & -S) for easier session management.
  For multi user support check [5] and [6].
List environment variables:
  env
Remove an environment variable:
  unset <variable>
  i.e.: unset MAKEFLAGS
System resources usage info:
  /usr/bin/landscape-sysinfo
Make symbolic links:
  ln -sr <target> <destination>
  cp -s <target> <destination>    # creates links only in current directory
  i.e.:
    ln -s linux.md ../.
    cp -s goddoc/linux.md .
See data transfers status (maybe more stuff and is a bit ugly):
  watch lsof <directory>
  i.e.: watch lsof /tmp/tmp.RLuQ51rVRW/
Resize a photo to 25% of original [9]:
  convert <input.jpg> -resize 25% <output.jpg>
Inkscape export to png with dpi of 400 only draw area:
  # man pages have for loops examples
  # inkscape command valid for v1.0.1
  inkscape -o <output file> --export-type=<[svg,png,ps,eps,pdf,emf,wmf,xaml]> -D -d <int dpi> <input file>
  i.e.: inkscape -o 01.base --export-type=png -D -d 400 01.base.svg
Replace <X> with <Y> in a file [10]:
  sed -i 's/<X>/<Y>/g' <some file>
  i.e.: sed -i 's/bionic/focal/g' /etc/apt/sources.list
Open a file explorer from terminal (ubuntu) [11]:
  nautilus <path to directory>
  i.e.: nautilus .   -> open current directory
Compile a c++ file with debug and profile data [12]:
  gcc -pg test_gprof.c
Output profile analyze data for c++ with g++ and gprof:
  -> execute your program to generate profile data:
    ./a.out 15234536
  -> generate readable information from profile data:
    gprof a.out gmon.out > analysis.txt
Show all services available:
  systemctl list-units --type=service --all
Kill process by name:
  pkill <name>
  i.e.: pkill firefox
Show hardware info of your memory (dmidecode can show more info):
  sudo dmidecode -t memory
Download a file with wget with a cookie in the header:
  wget --no-cookies --header "Cookie: <name>=<cookie>" <url>
  i.e.: wget --no-cookies --header "Cookie: session=aOasdqwroOJOIJpljhFPIAUSdf908y12309j0ovwcadsadasdasdRQ==" http://github.com/something/0728c036fb47b000
Allow a user to execute sudo commands without "sudo" password [14]:
  add in folder /etc/sudoers.d/ a file with this line:
  `<user> ALL=(ALL) NOPASSWD: ALL`
  i.e.: file **/etc/sudoers.d/001** with content `pavel ALL=(ALL) NOPASSWD: ALL`
Connect to a wifi using NetworkManager [15, 16]:
  nmcli device wifi connect <ssid> password <password> bssid <bssid number>
  i.e.: nmcli device wifi connect "Awesome&Wifi" password "with&awesomepassword"
  note: you can also use `nmtui`
Keep only X MB (more or less) of data in journal/system logs [17]:
  journalctl --vacuum-size=<X>
  i.e.. journalctl --vacuum-size=200M
Get only the first/last X characters from a file[18]:
  head -c <X> <file>
  tail -c <X> <file>
  i.e.. head -c 25 cmd.txt
        tail -c 25 cmd.txt
Get the last columns value with awk [19]:
  <output command> | awk '{print $NF}'
  i.e.:grep Download cmd.txt | awk '{print $NF}'
Force reinstall a package with apt if is already installed [20]:
  sudo apt install --reinstall <package>
  i.e.: sudo apt install --reinstall ./telegraf_1.18.0-1_amd64.deb  => localy available package
Stress test a systems cpu for an amount of time with a specific method:
  stress-ng --cpu <nº of workers/cores> --cpu-method <name of the method> -t <nº of seconds>
  i.e.: stress-ng --cpu 32 --cpu-method floatconversion -t 15
Get stres-ng available cpu methods:
  i.e.: stress-ng --cpu-method -h
List phoronix test suite available performance tests:
  i.e.: phoronix-test-suite list-tests
Install an available performance test in phoronix test suite:
  phoronix-test-suite install <performance test>
  i.e.: phoronix-test-suite install pts/build-linux-kernel
Run an installed performance test in phoronix test suite:
  phoronix-test-suite run <performance test>
  i.e.: phoronix-test-suite run pts/build-linux-kernel
Quick network scan:
  sudo arp-scan --localnet
Close a telnet connection with spanish keyboard:
  Ctrl + Alt Gr + ]
  type "quit"


REFERENCES:
[1] https://askubuntu.com/questions/258202/multi-core-compression-tools#answer-858828
[2] https://www.tecmint.com/change-a-users-default-shell-in-linux/
[3] https://superuser.com/questions/467398/how-do-i-exit-an-ssh-connection#answer-1251011
[4] https://superuser.com/questions/421997/what-is-a-ssh-key-fingerprint-and-how-is-it-generated
[5] https://wiki.networksecuritytoolkit.org/index.php/HowTo_Share_A_Terminal_Session_Using_Screen
[6] https://possiblelossofprecision.net/?p=1993
[7] https://www.gnu.org/software/parallel/parallel_tutorial.html
[8] https://stackoverflow.com/questions/12313242/utilizing-multi-core-for-targzip-bzip-compression-decompression#answer-12320421
[9] https://www.howtogeek.com/109369/how-to-quickly-resize-convert-modify-images-from-the-linux-terminal/
[10] https://linuxconfig.org/how-to-upgrade-ubuntu-to-20-04-lts-focal-fossa#h4-1-change-your-sources
[11] https://askubuntu.com/questions/8580/opening-the-file-browser-from-terminal#answer-8583
[12] https://www.thegeekstuff.com/2012/08/gprof-tutorial/
[13] https://linuxize.com/post/how-to-add-user-to-sudoers-in-ubuntu/
[14] https://timonweb.com/devops/how-to-enable-passwordless-sudo-for-a-specific-user-in-linux/
[15] https://nullr0ute.com/2016/09/connect-to-a-wireless-network-using-command-line-nmcli/
[16] https://unix.stackexchange.com/questions/420640/unable-to-connect-to-any-wifi-with-networkmanager-due-to-error-secrets-were-req
[17] https://unix.stackexchange.com/questions/139513/how-to-clear-journalctl
[18] https://unix.stackexchange.com/questions/167814/get-first-x-characters-from-the-cat-command
[19] https://stackoverflow.com/questions/13046167/printing-the-last-column-of-a-line-in-a-file
[20] https://www.cyberciti.biz/faq/debian-ubuntu-linux-reinstall-a-package-using-apt-get-command/
[21] https://zaiste.net/posts/tree-ignore-directories-patterns/
